package Crazyflie_Types
public
  with Base_Types;
  with Data_Model;

  --------------
  -- PWM_Rate --
  --------------
  data PWM_Rate extends Base_Types::Unsigned_8
  end PWM_Rate;

  --------------
  -- Six_Axis --
  -- Raw 6-axis motion sensor information
  --------------
  data Six_Axis
  properties
    Data_Model::Data_Representation => Struct;
  end Six_Axis;

  data implementation Six_Axis.impl
  subcomponents
    Acc_X: data Base_Types::Integer_16;
    Acc_Y: data Base_Types::Integer_16;
    Acc_Z: data Base_Types::Integer_16;
    Gyro_X: data Base_Types::Integer_16;
    Gyro_Y: data Base_Types::Integer_16;
    Gyro_Z: data Base_Types::Integer_16;
  end Six_Axis.impl;
  
  -- Caleb Matthiesen addition for question Q8
  ----------------
  -- Three_Axis --
  -- Raw 3-axis motion sensor information
  -- from the Flow Deck expansion
  ----------------
  data Three_Axis
  properties
    Data_Model::Data_Representation => Struct;
  end Three_Axis;

  data implementation Three_Axis.impl
  subcomponents
    Flow_X: data Base_Types::Integer_16; -- PMW3901MB [optical]
    Flow_Y: data Base_Types::Integer_16; -- PMW3901MB [optical]
    Flow_Z: data Base_Types::Integer_16; -- VL53L0X   [laser]
  end Three_Axis.impl;
  -- /Caleb Matthiesen

  --------------------
  -- Syslink_Packet --
  -- Syslink is the protocol used between the STM32 and NRF51 in
  -- Crazyflie 2.0. It handles low level communication on the serial
  -- port. See https://wiki.bitcraze.io/doc:crazyflie:syslink:index
  --------------------
  data Syslink_Packet
    --  For now, we model it as an opaque type
  end Syslink_Packet;
end Crazyflie_Types;