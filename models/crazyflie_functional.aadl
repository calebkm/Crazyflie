package Crazyflie_functional

-- This package models the abstract functional chain of the Crazyflie,
-- from https://wiki.bitcraze.io/doc:crazyflie:dev:fimware:sensor_to_control

public
  abstract Accelero
  features
    Accelero_Out : out data port;

  flows
    f1 : flow source Accelero_Out {latency => 100 us .. 300 us; };		

  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; -- 250 Hz
  
  -- Caleb Matthiesen begin addition for Q9
  annex emv2 {**
	use types Crazyflie_Errors;
	use behavior Crazyflie_Errors::simple; -- definition of error modes
	
	-- Caleb Matthiesen begin addition for Q12
  	error propagations
	  -- outgoing error propagation
	  Accelero_out: out propagation {ValueError};
	  
	flows
	  -- When the sensor fails, its error is propagated through port Accelero_Out
	  ErrorSource: error source Accelero_out {ValueError} when {ValueError};
 	end propagations;
 	-- / End Q12 addition

    properties
	  -- Useful for FHA reports
	  EMV2::OccurrenceDistribution => [ProbabilityValue => 1.0e-9;
									   Distribution => Poisson;] applies to Failed;
	  EMV2::severity => 1 applies to Failed;
	  EMV2::likelihood => C applies to Failed;
	  EMV2::hazards =>
		([ crossreference => "";
		   failure => "Loss of Accelerometer sensor readings";
		   phases => ("all");
	 	   description => "Accelerometer sensor failure";
		   comment => "May be critical as no redundancy on UAV";
		 ]) applies to Failed;
  **};
  -- / End Q9 addition
  end Accelero;

  abstract Gyro
  features
    Gyro_Out : out data port;
    
  flows
    f1 : flow source Gyro_Out {latency => 100 us .. 300 us; };		
    
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; -- 250 Hz
    
  -- Caleb Matthiesen begin addition for Q9
  annex emv2 {**
	use types Crazyflie_Errors;
	use behavior Crazyflie_Errors::simple;
	
  	-- Caleb Matthiesen begin addition for Q12
  	error propagations
	  -- outgoing error propagation
	  Gyro_out: out propagation {ValueError};
	  
	flows
	  -- When the sensor fails, its error is propagated through port Gyro_Out
	  ErrorSource: error source Gyro_out {ValueError} when {ValueError};
 	end propagations;
 	-- / End Q12 addition

    properties
	  EMV2::OccurrenceDistribution => [ProbabilityValue => 1.0e-9;
									   Distribution => Poisson;] applies to Failed;
	  EMV2::severity => 1 applies to Failed;
	  EMV2::likelihood => C applies to Failed;
	  EMV2::hazards =>
		([ crossreference => "";
		   failure => "Loss of Gryo sensor readings";
		   phases => ("all");
	 	   description => "Gyro sensor failure";
		   comment => "May be critical as no redundancy on UAV";
		 ]) applies to Failed;
    **};
    -- / End Q9 addition
  end Gyro;

  abstract Magneto
  features
    Magneto_Out : out data port;
    
 flows
   f1 : flow source Magneto_Out {latency => 100 us .. 300 us; };		
    
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; -- 250 Hz
  
  -- Caleb Matthiesen begin addition for Q9
  annex emv2 {**
	use types Crazyflie_Errors;
	use behavior Crazyflie_Errors::simple;
	
	-- Caleb Matthiesen begin addition for Q12
  	error propagations
	  -- outgoing error propagation
	  Magneto_out: out propagation {ValueError};
	  
	flows
	  -- When the sensor fails, its error is propagated through port Magneto_Out
	  ErrorSource: error source Magneto_out {ValueError} when {ValueError};
 	end propagations;
 	-- / End Q12 addition

    properties
	  EMV2::OccurrenceDistribution => [ProbabilityValue => 1.0e-9;
									   Distribution => Poisson;] applies to Failed;
	  EMV2::severity => 1 applies to Failed;
	  EMV2::likelihood => C applies to Failed;
	  EMV2::hazards =>
		([ crossreference => "";
		   failure => "Loss of Magnetometer sensor readings";
		   phases => ("all");
	 	   description => "Magnetometer sensor failure";
		   comment => "May be critical as no redundancy on UAV";
		 ]) applies to Failed;
    **};
    -- / End Q9 addition
  end Magneto;

  abstract Sensor_Fusion
  features
    Accelero_In : in data port;
    Gyro_In     : in data port;
    Magneto_In  : in data port;
    
    Data_F_Out  : out data port; -- Fused data
    
  flows
    f1 : flow path Accelero_In -> Data_F_Out {latency => 200 us .. 400 us;};	
    f2 : flow path Gyro_In -> Data_F_Out {latency => 200 us .. 400 us;};
    -- Caleb Matthiesen addition for Q13
    f3 : flow path Magneto_In -> Data_F_Out {latency => 200 us .. 400 us;};
    	   
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; -- 250 Hz
    
  -- Caleb Matthiesen begin addition for Q13
  annex EMV2 {**
    use types Crazyflie_Errors;
    use behavior Crazyflie_Errors::simple;
    
    error propagations
      Accelero_In : in propagation {ValueError};
      Gyro_In     : in propagation {ValueError};
      Magneto_In  : in propagation {ValueError};
      
      Data_F_Out  : out propagation {ValueError};

    flows
      f1 : error path Accelero_In -> Data_F_Out;
      f2 : error path Gyro_In -> Data_F_Out;
      f3 : error path Magneto_In -> Data_F_Out;
    end propagations;
    
    component error behavior transitions
      t1 : Operational -[Accelero_In{ValueError}]-> Failed;
      t2 : Operational -[Gyro_In{ValueError}]-> Failed;
      t3 : Operational -[Magneto_In{ValueError}]-> Failed;

    propagations
      Failed -[]-> Data_F_Out{ValueError};
    end component;
  **};
  -- / End Q13 additions
  end Sensor_Fusion;

  abstract Controller
  features
    Data_F_In : in data port;
    Gyro_In   : in data port;
    Motor_Out : out data port;
    TC : in data port;
  flows
  	f1 : flow path Data_F_In -> Motor_Out {latency => 200 us .. 400 us; };	
    f2 : flow path Gyro_In -> Motor_Out {latency => 200 us .. 400 us; };	
    
  properties
    Dispatch_Protocol => Periodic;
    Period => 2 ms; -- 500 Hz
    
  -- Caleb Matthiesen begin addition for Q16
  annex EMV2 {**
    use types Crazyflie_Errors;
    use behavior Crazyflie_Errors::simple;
    
    error propagations
      Data_F_In : in propagation {ValueError};
      Gyro_In : in propagation {ValueError};
      
      Motor_Out : out propagation {ValueError};

    flows
      f1 : error path Data_f_In -> Motor_Out;
      f2 : error path Gyro_In -> Motor_Out;
    end propagations;
    
    component error behavior transitions
      t1 : Operational -[Data_F_In{ValueError}]-> Failed;
      t2 : Operational -[Gyro_In{ValueError}]-> Failed;

    propagations
      Failed -[]-> Motor_Out{ValueError};
    end component;
  **};
  -- / End Q16 additions
  end Controller;

  abstract Motors
  features
    Motor_In : in data port;
    
  flows
    f1 : flow sink Motor_In {latency => 100 us .. 500 us; };
    			
  properties
    -- Dispatch_Protocol => Aperiodic;
    Dispatch_Protocol => Periodic;
    Period => 2ms;
  
  -- Caleb Matthiesen begin addition for Q9 and Q16
  annex emv2 {**
	use types Crazyflie_Errors;
	use behavior Crazyflie_Errors::simple;
	
	error propagations
      Motor_In : in propagation {ValueError};
    end propagations;
    
    component error behavior transitions
      t1 : Operational -[Motor_In{ValueError}]-> Failed;
    end component;

    properties
	  EMV2::OccurrenceDistribution => [ProbabilityValue => 1.0e-9;
									   Distribution => Poisson;] applies to Failed;
	  EMV2::severity => 1 applies to Failed;
	  EMV2::likelihood => C applies to Failed;
	  EMV2::hazards =>
		([crossreference => "";
		  failure => "Loss of motors";
		  phases => ("all");
	 	  description => "Motor failure";
		  comment => "Critical failure!";
		]) applies to Failed;
    **};
  -- / End Q9 and Q16 addition
  end Motors;

  abstract Pilot
  features
	Order : out data port;
  end Pilot;

  system Crazyflie_Functional_Chain
  end Crazyflie_Functional_Chain;

  system implementation Crazyflie_Functional_Chain.impl
  subcomponents
    --  Sensing
    Acc        : abstract Accelero;
    Gyro       : abstract Gyro;
    Magneto    : abstract Magneto;

    Pilot      : abstract Pilot;

    --  Computing
    Fusion     : abstract Sensor_Fusion;
    Controller : abstract Controller;

    --  Acting
    Motors : abstract Motors;

  connections
    C1 : port Acc.Accelero_Out     -> Fusion.Accelero_In;
    C2 : port Gyro.Gyro_Out        -> Fusion.Gyro_In;
    C3 : port Magneto.Magneto_Out  -> Fusion.Magneto_In;

    C4 : port Gyro.Gyro_Out        -> Controller.Gyro_In;
    C5 : port Fusion.Data_F_Out    -> Controller.Data_F_In;

    C6 : port Controller.Motor_Out -> Motors.Motor_In;

    C7 : port Pilot.Order -> Controller.TC;

  flows
  	f_etef1 : end to end flow Gyro.f1 -> C2 -> Fusion.f2 -> C5 -> Controller.f1 -> C6 -> Motors.f1 { latency => 0 ms .. 2 ms;};
  	f_etef1bis : end to end flow Gyro.f1 -> C4 -> Controller.f2 -> C6 -> Motors.f1 { latency => 0 ms .. 2 ms;};
    f_etef2 : end to end flow Acc.f1 -> C1 -> Fusion.f1 -> C5 -> Controller.f1 -> C6 -> Motors.f1 { latency => 0 ms .. 2 ms;};
    
  -- Caleb Matthiesen addition for Q11
  annex EMV2 {**
	use types Crazyflie_Errors;
	use behavior Crazyflie_Errors::simple;
	
	composite error behavior
	  states
		[Acc.Operational
		  and Gyro.Operational
		  and Magneto.Operational
		  and Motors.Operational 
		]-> Operational;
		
		[Acc.Failed
		  or Gyro.Failed
		  or Magneto.Failed
		  or Motors.Failed
		]-> Failed;
	end composite;
  **};
  -- / End Q11 addition
  end Crazyflie_Functional_Chain.impl;
end Crazyflie_functional;